# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build-test

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - '**.go'
      - '**.xsd'
      - '**.html'
      - '**.sql'
      - '**/sqlc.yaml'
      - '**/Makefile'
      - '**/Dockerfile' #run this workflow first to ensure tests are passing
      - '**/chart/**' #trigger also when chart templates chnage to force republish
      - '.github/**' #trigger when pipeline changes
      - '**/go.mod' #trigger when dependencies change
      - '**/ModuleDescriptor-template.json' #trigger when module descriptor changes
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.go'
      - '**.xsd'
      - '**.html'
      - '**.sql'
      - '**/sqlc.yaml'
      - '**/Makefile'
      - '**/Dockerfile' #run this workflow first to ensure tests are passing
      - '**/chart/**' #trigger also when chart templates change to force republish
      - '.github/**' #trigger when pipeline changes
      - '**/go.mod' #trigger when dependencies change
      - '**/ModuleDescriptor-template.json' #trigger when module descriptor changes
  release:
    types: [published]

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: latest
  SQLC_VERSION: '1.29.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: [broker, illmock]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: xsltproc
        version: 1.0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: |
          go.work.sum
          ${{ matrix.modules }}/go.sum

    - name : Ensure sqlc is installed
      uses: sqlc-dev/setup-sqlc@v4
      with:
        sqlc-version: ${{ env.SQLC_VERSION }}

    - name: Generate sources
      run: make generate

    - name: Lint module '${{ matrix.modules }}'
      uses: golangci/golangci-lint-action@v6
      with:
        install-mode: goinstall
        version: ${{ env.GOLANGCI_LINT_VERSION }}
        working-directory: ${{ matrix.modules }}

    - name: Build
      run: make all
      working-directory: ${{ matrix.modules }}

    - name: Test
      run: make check
      working-directory: ${{ matrix.modules }}

    - name: Check test coverage
      uses: vladopajic/go-test-coverage@v2
      continue-on-error: true
      with:
        config: ${{ matrix.modules }}/.testcoverage.yaml
        profile: ${{ matrix.modules }}/coverage.out

    - name: Check vulnerabilities in '${{ matrix.modules }}'
      uses: golang/govulncheck-action@master
      with:
        go-version-input: ${{ env.GO_VERSION }}
        repo-checkout: false
        go-package: ./...
        work-dir: ${{ matrix.modules }}
        cache-dependency-path: ${{ matrix.modules }}/go.sum

  build-all:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Check all builds succeeded
    needs: [build]
    steps:
      - run: |
          result="${{ needs.build.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
